{
	"id": "4ea90b29-738c-4735-9b98-d0eaf4d17408",
	"name": "udacity-fsnd-udaspicelatte",
	"allTests": [],
	"timestamp": "2019-12-09T05:38:00.313Z",
	"collection_id": "46710a19-5160-4584-beac-f4b19f15331a",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "46710a19-5160-4584-beac-f4b19f15331a",
		"name": "udacity-fsnd-udaspicelatte",
		"order": [],
		"folders_order": [
			"bb72c8e0-f39f-4a40-bd24-9254dbd2c7da",
			"45487458-7c9e-4a4b-ab8d-0d4a54700566",
			"bf00f5a3-66a3-482a-9ba3-878add7847ab"
		],
		"isFavorite": false
	},
	"folder": null,
	"environment": null,
	"globals": null,
	"results": [
		{
			"name": "/drinks",
			"id": "f0cb40b4-a755-4ba7-8dd1-c7e8696d4030",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"533"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "533",
			"totalRequestTime": "533",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "7dc64046-0693-449a-8578-188bf8387eb8",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"506"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "506",
			"totalRequestTime": "506",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "a03db001-9b09-4985-b4e1-77ec753c4165",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"506"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "506",
			"totalRequestTime": "506",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "529ed278-60f6-4ffe-a3aa-5dc1e1ea8774",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"505"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "505",
			"totalRequestTime": "505",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "ae9fe8ab-7620-4659-89bd-3256446a65a1",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"505"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "505",
			"totalRequestTime": "505",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "5d66a9e3-dd7c-4258-84b9-2d2741b4eb3b",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"508"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "508",
			"totalRequestTime": "508",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "4c54a3f1-1907-4908-98ce-8a10e466019b",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"867"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "867",
			"totalRequestTime": "867",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "ec0702df-7ab5-4b39-8b12-86a64a00d613",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"798"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "798",
			"totalRequestTime": "798",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "4e84b085-0722-41ed-958b-0bd163e482c5",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"808"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "808",
			"totalRequestTime": "808",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "562deaab-57ff-4b81-a130-30c3327039b2",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"845"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "845",
			"totalRequestTime": "845",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "1964fcbb-2380-4ab8-8bd9-eeb5005673ef",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"829"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "829",
			"totalRequestTime": "829",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "691317e7-b702-49b6-9f5d-bbb11c69c77a",
			"url": "localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"508"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "508",
			"totalRequestTime": "508",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "2ab5f839-335f-4a32-b9e3-76c9e071b5f4",
			"url": "localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"816"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "816",
			"totalRequestTime": "816",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "3040175e-7227-4bb2-a41c-df1eeb81f603",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"824"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "824",
			"totalRequestTime": "824",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "e3fbdb16-baee-4fe1-8814-b88b926e81d1",
			"url": "localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"807"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "807",
			"totalRequestTime": "807",
			"iterationResults": {}
		}
	],
	"totalPass": 20,
	"totalFail": 0,
	"totalTime": 10165,
	"lifecycle": "done",
	"requests": [
		{
			"name": "/drinks",
			"id": "f0cb40b4-a755-4ba7-8dd1-c7e8696d4030",
			"url": "localhost:5000/drinks",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "7dc64046-0693-449a-8578-188bf8387eb8",
			"url": "localhost:5000/drinks-detail",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "a03db001-9b09-4985-b4e1-77ec753c4165",
			"url": "localhost:5000/drinks",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "529ed278-60f6-4ffe-a3aa-5dc1e1ea8774",
			"url": "localhost:5000/drinks/1",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "ae9fe8ab-7620-4659-89bd-3256446a65a1",
			"url": "localhost:5000/drinks/1",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "5d66a9e3-dd7c-4258-84b9-2d2741b4eb3b",
			"url": "localhost:5000/drinks",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "4c54a3f1-1907-4908-98ce-8a10e466019b",
			"url": "localhost:5000/drinks-detail",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "ec0702df-7ab5-4b39-8b12-86a64a00d613",
			"url": "localhost:5000/drinks",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "4e84b085-0722-41ed-958b-0bd163e482c5",
			"url": "localhost:5000/drinks/1",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "562deaab-57ff-4b81-a130-30c3327039b2",
			"url": "localhost:5000/drinks/1",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "1964fcbb-2380-4ab8-8bd9-eeb5005673ef",
			"url": "localhost:5000/drinks",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "691317e7-b702-49b6-9f5d-bbb11c69c77a",
			"url": "localhost:5000/drinks",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "2ab5f839-335f-4a32-b9e3-76c9e071b5f4",
			"url": "localhost:5000/drinks-detail",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "3040175e-7227-4bb2-a41c-df1eeb81f603",
			"url": "localhost:5000/drinks/1",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "e3fbdb16-baee-4fe1-8814-b88b926e81d1",
			"url": "localhost:5000/drinks/1",
			"time": "2019-12-09T05:38:00.313Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}